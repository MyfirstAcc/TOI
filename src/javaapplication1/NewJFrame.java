/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import lr7.NewJFrame1;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author North_PC
 */
public class NewJFrame extends javax.swing.JFrame {

    RandomAccessFile freader; //
    public byte[] buff;
    private File file;
    private final String PATH_FILE = System.getProperty("user.dir").concat("\\files\\data.txt");
    private int aRecNo;
    private int position;
    private int fBytes;
    public char[] buf;
    private boolean isNew;

    /**
     * Creates new form NewJFrame
     *
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSurname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPatronymic = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelphoneNumber = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        extractFileButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        filterButton = new javaapplication1.NewBeanForm();
        selectionButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        txtFilterName = new javax.swing.JTextField();
        txtFilterSurname = new javax.swing.JTextField();
        txtFilterDate = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Технологии обработки информации");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(500, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(2, 1));

        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 15, 1, 1));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Фамилия");
        jPanel4.add(jLabel1);

        txtSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSurnameActionPerformed(evt);
            }
        });
        jPanel4.add(txtSurname);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Имя");
        jPanel4.add(jLabel2);
        jPanel4.add(txtFirstName);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Отчество");
        jPanel4.add(jLabel3);
        jPanel4.add(txtPatronymic);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Год рождения");
        jPanel4.add(jLabel4);
        jPanel4.add(txtDate);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Телефон");
        jPanel4.add(jLabel5);
        jPanel4.add(txtTelphoneNumber);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.Y_AXIS));

        addButton.setText("Добавить");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel5.add(addButton);

        deleteButton.setText("Удалить");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel5.add(deleteButton);

        saveButton.setText("Сохранить");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jPanel5.add(saveButton);

        extractFileButton.setText("Упаковать");
        extractFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractFileButtonActionPerformed(evt);
            }
        });
        jPanel5.add(extractFileButton);

        jPanel1.add(jPanel5);

        getContentPane().add(jPanel1);

        prevButton.setText("Предыдущая");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Следующая");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Искать...");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Условие...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setDoubleBuffered(false);
        jPanel3.setName(""); // NOI18N

        filterButton.setText("Фильтр");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        selectionButton.setText("Выборка");
        selectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Фамилия");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Имя");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Год рождения");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtFilterSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFilterName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFilterDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(txtFilterSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFilterName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFilterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(selectionButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Искать по индексу");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(prevButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevButton)
                    .addComponent(nextButton)
                    .addComponent(searchButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSurnameActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (showConfirmDialog(null, "Вы точно хотите удалить?", "Удаление записи", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
            String surname = "'[Удален]'";
            surname += txtSurname.getText();
            String name = txtFirstName.getText();
            String middlename = txtPatronymic.getText();
            String date = txtDate.getText();
            String telephonenumber = txtTelphoneNumber.getText();
            try {
                char[] t = new char[22];
                buf = new char[128];
                writeBuffer(new StringBuilder().append(surname).append(t).toString(), 0);
                writeBuffer(name, 30);
                writeBuffer(middlename, 50);
                writeBuffer(date, 70);
                writeBuffer(telephonenumber, 78);
                String query = new String(buf);
                long d = freader.getFilePointer();
                freader.seek(d - 128);
                buff = query.getBytes();
                freader.write(buff);
                showMessageDialog(null, "Запись".concat(" удалена!"));
                isNew = false;
                nextButtonActionPerformed(evt);
            } catch (HeadlessException | IOException ex) {

            }

        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        txtDate.setText("");
        txtFirstName.setText("");
        txtSurname.setText("");
        txtTelphoneNumber.setText("");
        txtPatronymic.setText("");
        buff = new byte[128];
        isNew = true;
    }//GEN-LAST:event_addButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String surname = txtSurname.getText();
        String name = txtFirstName.getText();
        String middlename = txtPatronymic.getText();
        String date = txtDate.getText();
        String telephonenumber = txtTelphoneNumber.getText();

        try {
            if (isDate(date, "ddMMyyyy")) {
                buf = new char[128];
                writeBuffer(surname, 0);
                writeBuffer(name, 30);
                writeBuffer(middlename, 50);
                writeBuffer(date, 70);
                writeBuffer(telephonenumber, 78);

                String query = new String(buf);
                int d = (int) freader.getFilePointer();
                if (isNew == true) {
                    freader.seek(freader.length());
                } else {
                    freader.seek(freader.getFilePointer() - 128);
                }

                buff = query.getBytes();
                freader.write(buff);
                //showMessageDialog(null, "Запись".concat(isNew ? (" добавлена!") : (" обновлена!")));
                freader.seek(d);
                isNew = false;
            }

        } catch (Exception ex) {
            showMessageDialog(null, ex.getMessage());
            System.out.println(Arrays.toString(ex.getStackTrace()));
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void extractFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractFileButtonActionPerformed
        // TODO add your handling code here:
        extractFile();
    }//GEN-LAST:event_extractFileButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        winOpen();


    }//GEN-LAST:event_formWindowOpened

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        new SearchUnit(this, "Искать");
    }//GEN-LAST:event_searchButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        String surname, name, date, S;
        boolean CorrectSurname, CorrectName, CorrectDate;

        try {
            // TODO add your handling code here:
            fBytes = freader.read(buff);
            prevButton.setEnabled(true);
            if (fBytes <= 0) {
                JOptionPane.showOptionDialog(this, "Конец файла", "Достигнут конец файла!", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE, null, null, null);
                nextButton.setEnabled(false);
            } else {
                if (isDeleted()) {
                    nextButtonActionPerformed(evt);
                } else {
                    aRecNo++;
                    if (filterButton.getTag() == 1) {
                        S = new String(buff, "cp1251");
                        surname = S.substring(0, 29).trim();
                        name = S.substring(30, 30 + 20).trim();
                        date = S.substring(70, 70 + 8).trim();
                        CorrectSurname = true;
                        if (!txtFilterSurname.getText().isEmpty()) {
                            CorrectSurname = txtFilterSurname.getText().equals(surname);
                        }
                        CorrectName = true;
                        if (!txtFilterName.getText().isEmpty()) {
                            CorrectName = txtFilterName.getText().equals(name);
                        }
                        CorrectDate = true;
                        if (!txtFilterDate.getText().isEmpty()) {
                            CorrectDate = txtFilterDate.getText().equals(date);
                        }
                        if (!(CorrectSurname && CorrectName && CorrectDate)) {
                            nextButtonActionPerformed(evt);
                        } else {
                            showRecord();
                        }
                    } else {
                        showRecord();
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        // TODO add your handling code here:
        String surname, name, date, S;
        boolean CorrectSurname, CorrectName, CorrectDate;
        nextButton.setEnabled(true);
        if (aRecNo == 1) {
            JOptionPane.showOptionDialog(this, "Начало файла", "Достигнуто начало файла!", JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE, null, null, null);
            prevButton.setEnabled(false);
        } else {
            try {
                position = (aRecNo - 2) * 128;
                freader.seek(position);
                freader.read(buff);
                aRecNo--;
                if (isDeleted()) {
                    prevButtonActionPerformed(evt);
                }
                if (filterButton.getTag() == 1) {
                    S = new String(buff, "cp1251");
                    surname = S.substring(0, 29).trim();
                    name = S.substring(30, 30 + 20).trim();
                    date = S.substring(70, 70 + 8).trim();
                    CorrectSurname = true;
                    if (!txtFilterSurname.getText().isEmpty()) {
                        CorrectSurname = txtFilterSurname.getText().equals(surname);
                    }
                    CorrectName = true;
                    if (!txtFilterName.getText().isEmpty()) {
                        CorrectName = txtFilterName.getText().equals(name);
                    }
                    CorrectDate = true;
                    if (!txtFilterDate.getText().isEmpty()) {
                        CorrectDate = txtFilterDate.getText().equals(date);
                    }
                    if (!(CorrectSurname && CorrectName && CorrectDate)) {
                        prevButtonActionPerformed(evt);
                    } else {
                        showRecord();
                    }

                } else {
                    showRecord();
                }

            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        boolean StopRun, CorrectSurname, CorrectName, CorrectDate;
        int fBytes;
        String S = null, surname = new String(""), namee = new String(""), date = new String("");

        if (filterButton.getTag() == 0) {
            if (canSelect()) {
                try {
                    freader.seek(0);
                    StopRun = false;
                    do {
                        fBytes = freader.read(buff);
                        if (fBytes < 0) {
                            StopRun = true;
                            showMessageDialog(null, "Записей, удовлетворяющих заданным условиям, не найдено");
                        } else {
                            S = new String(buff, "cp1251");
                            surname = S.substring(0, 29).trim();
                            namee = S.substring(29, 29 + 20).trim();
                            date = S.substring(70, 70 + 8).trim();
                            CorrectSurname = true;
                            if (!(txtFilterSurname.getText().isEmpty())) {
                                CorrectSurname = surname.equals(txtFilterSurname.getText().trim());
                            }
                            CorrectName = true;
                            if (!(txtFilterName.getText().isEmpty())) {
                                CorrectName = txtFilterName.getText().trim().equals(namee);
                            }
                            CorrectDate = true;
                            if (!(txtFilterDate.getText().isEmpty())) {
                                CorrectDate = txtFilterDate.getText().trim().equals(date);
                            }
                            StopRun = CorrectName && CorrectSurname && CorrectDate;
                        }
                        if (StopRun) {
                            filterButton.setTag(1);
                            filterButton.setText("Отменить фильтр");
                            txtSurname.setText(surname);
                            txtFirstName.setText(namee);
                            txtPatronymic.setText(S.substring(50, 50 + 20).trim());
                            txtDate.setText(S.substring(70, 70 + 8).trim());
                            txtTelphoneNumber.setText(S.substring(78, 78 + 50).trim());
                        }

                    } while (!StopRun);

                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            filterButton.setTag(0);
            filterButton.setText("Фильтр");
        }
    }//GEN-LAST:event_filterButtonActionPerformed

    private void selectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionButtonActionPerformed
        // TODO add your handling code here:
        QueryUint frmQuery = new QueryUint("Выборка", this);
        int fBytes = 0, R = 0;
        DefaultListModel<Person> model = new DefaultListModel();
        boolean StopRun, CorrectSurname, CorrectName, CorrectDate;
        String S = new String(), surname = new String(), name = new String(), date;
        if (filterButton.getTag() == 1) {
            showMessageDialog(null, "Набор данных в отфильтрованном состоянии \n "
                    + "Для формирования выборки отмените фильтр.");
            return;
        }
        if (!canSelect()) {
            showMessageDialog(null, "Не заданы условия формирования выборки.");
        } else {

            if (frmQuery.isVisible()) {
                frmQuery.setVisible(false);
                frmQuery.listBox.removeAll();
            }
            try {
                freader.seek(0);
                do {
                    fBytes = freader.read(buff);
                    if (fBytes == 128) {
                        S = new String(buff, "cp1251");
                        surname = S.substring(0, 30).trim();
                        name = S.substring(30, 30 + 20).trim();
                        date = S.substring(70, 70 + 8).trim();
                        CorrectSurname = true;
                        if (!this.txtFilterSurname.getText().isEmpty()) {
                            CorrectSurname = txtFilterSurname.getText().trim().equals(surname);
                        }
                        CorrectName = true;
                        if (!(this.txtFilterName.getText().isEmpty())) {
                            CorrectName = txtFilterName.getText().trim().equals(name);
                        }
                        CorrectDate = true;
                        if (!(this.txtFilterDate.getText().isEmpty())) {
                            CorrectDate = txtFilterDate.getText().trim().equals(date);
                        }
                        if (CorrectSurname && CorrectName && CorrectDate) {
                            R = (int) freader.getFilePointer() - fBytes;
                            model.addElement(new Person(name, surname, R));
                        }
                    }

                } while (fBytes != -1);

                if (model.isEmpty()) {
                    showMessageDialog(null, "Для заданных условий записей не найдено.");
                } else {
                    frmQuery.setListBox(model);
                    frmQuery.setVisible(true);
                    frmQuery.setLocation(frmQuery.getLocation().x + 50, frmQuery.getLocation().y + 350);
                }
            } catch (IOException ex) {

            }
        }


    }//GEN-LAST:event_selectionButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new NewJFrame1(this);
     
    }//GEN-LAST:event_jButton1ActionPerformed

    void showRecord() throws UnsupportedEncodingException {
        String sbuff = new String(buff, "cp1251");
        txtSurname.setText(((String) sbuff.subSequence(0, 29)).trim());
        txtFirstName.setText(((String) sbuff.subSequence(29, 29 + 20)).trim());
        txtPatronymic.setText(((String) sbuff.subSequence(50, 50 + 20)).trim());
        txtDate.setText(((String) sbuff.subSequence(70, 70 + 8)).trim());
        txtTelphoneNumber.setText(((String) sbuff.subSequence(78, 78 + 50)).trim());
    }

    private void extractFile() {

        try {
//            Path path = Paths.get("C:\\Users\\bananaza\\Documents\\NetBeansProjects\\JavaApplication7\\build\\classes\\data.txt");
//            ArrayList<String> contents = new ArrayList<>();                  
//            contents = (ArrayList<String>) Files.readAllLines(path, Charset.forName("windows-1251"));
//            for (var item : contents) {
//                System.out.println(item);
//            }
            File fnew = new File(NewJFrame.class.getProtectionDomain().getCodeSource().getLocation().getPath().concat("datanew.txt"));
            RandomAccessFile freadernew = new RandomAccessFile(fnew, "rw");
            freader.seek(0);
            while (freader.read(buff) > -1) {
                if (!isDeleted()) {
                    freadernew.write(buff);
                }
            }
            freadernew.close();
            freader.close();
            if (file.delete()) {
                System.out.println("+");
            }
            if (fnew.renameTo(file)) {
                System.out.println("-");
            }
            winOpen();

        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean isDate(String strDate, String patter) throws Exception {
        DateFormat formatter;
        Date date;
        String regex = "^((0[1-9]|[12][0-9]|3[01])(0[1-9]|1[012])"
                + "(16|17|18|19|2[0-9]|3[0-9]|4[0-9]|5[0-9]|6[0-9]|7[0-9]"
                + "|8[0-9]|9[0-9]{2})[0-9]{2})$";
        Pattern pattern = Pattern.compile(regex);
        Matcher mat = pattern.matcher(strDate);
        formatter = new SimpleDateFormat(patter);

        // Устанавливаем строгое распознавание
        formatter.setLenient(false);

        if (mat.matches() == true) {
            date = formatter.parse(strDate);
        } else {
            throw new Exception("Ввденное значение \"".concat(strDate).concat("\" не является датой!"));
        }
        return true;
    }

    public void writeBuffer(String param, int offset) {
        for (int i = 0; i < param.length(); i++) {
            buf[i + offset] = param.charAt(i);
        }
    }

    public boolean isDeleted() throws UnsupportedEncodingException {
        String str = new String(buff, "cp1251");
        if (!str.isEmpty()) {
            if (str.contains("'[Удален]'")) {
                return true;
            }
        }
        return false;

    }

    private void winOpen() {
        try {

            file = new File(PATH_FILE);
            freader = new RandomAccessFile(file, "rw");
            buff = new byte[128];
            freader.read(buff);
            aRecNo = 1;
            showRecord();
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        }
    }

    private boolean canSelect() {
        return !(txtFilterName.getText().isEmpty() && txtFilterSurname.getText().isEmpty() && txtFilterDate.getText().isEmpty());
    }

    public void setRecord(int id) {
        try {
            id = 128 * --id;
            freader.seek(id);
            freader.read(buff);
            showRecord();
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton extractFileButton;
    private javaapplication1.NewBeanForm filterButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectionButton;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFilterDate;
    private javax.swing.JTextField txtFilterName;
    private javax.swing.JTextField txtFilterSurname;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtPatronymic;
    private javax.swing.JTextField txtSurname;
    private javax.swing.JTextField txtTelphoneNumber;
    // End of variables declaration//GEN-END:variables

}
